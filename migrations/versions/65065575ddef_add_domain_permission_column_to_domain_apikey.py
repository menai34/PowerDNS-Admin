"""empty message

Revision ID: 65065575ddef
Revises: 3f76448bb6de
Create Date: 2021-02-20 22:46:56.330515

"""
from alembic import op
import sqlalchemy as sa
import json


# revision identifiers, used by Alembic.
revision = '65065575ddef'
down_revision = '3f76448bb6de'
branch_labels = None
depends_on = None

DEFAULT_API_PERMISSIONS = {
    "Administrator": {
        "api-get": {
            "zone": True,
            "zones": True,
            "search": True
        },
        "api-modify": {
            "axfr-retrieve": True,
            "export": True,
            "notify": True,
            "rectify": True,
            "zone": True,
            "zones": True
        },
        "api-delete": {
            "zone": True
        }
    },
    "Operator": {
        "api-get": {
            "zone": True,
            "zones": True,
            "search": True
        },
        "api-modify": {
            "axfr-retrieve": False,
            "export": False,
            "notify": False,
            "rectify": False,
            "zone": True,
            "zones": False
        },
        "api-delete": {
            "zone": False
        }
    },
    "User": {
        "api-get": {
            "zone": True,
            "zones": True,
            "search": True
        },
        "api-modify": {
            "axfr-retrieve": False,
            "export": False,
            "notify": False,
            "rectify": False,
            "zone": False,
            "zones": False
        },
        "api-delete": {
            "zone": False
        }
    }
}


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('apikey_permissions',
                    sa.Column('apikey_id', sa.Integer(), nullable=True),
                    sa.Column('json', sa.TEXT, nullable=True),
                    sa.ForeignKeyConstraint(['apikey_id'], ['apikey.id'], )
                    )
    update_data()
    ### end Alembic commands ###


def update_data():
    conn = op.get_bind()
    res = conn.execute(
        "select api_key.apikey_id, role.name from domain_apikey as api_key inner join apikey on api_key.apikey_id = apikey.id inner join role on apikey.role_id = role.id")
    results = res.fetchall()

    setting_table = sa.sql.table('apikey_permissions',
                                 sa.Column('apikey_id', sa.Integer()),
                                 sa.Column('json', sa.TEXT)
                                 )
    insert_data = [{"apikey_id": row[0], "json": json.dumps(
        DEFAULT_API_PERMISSIONS[row[1]])} for row in results]

    op.bulk_insert(setting_table, insert_data)

    with op.batch_alter_table('apikey_permissions') as batch_op:
        batch_op.alter_column(
            sa.Column('json', sa.TEXT, nullable=False))


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('apikey_permissions')
    # ### end Alembic commands ###
